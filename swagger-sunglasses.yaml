swagger: '2.0'
info:
  title: Sunglasses API
  description: An API to support the sunglasses platform
  version: 1.0.0
host: sunglasses.io
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /products:
    get:
      summary: Products
      description: |
        The Products endpoint allows you to search products' name and description based on a search string, by default returns all products
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
      tags:
        - Products
      responses:
        '200':
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products/{productId}:
    get:
      summary: Product by Id
      description: |
        The Product by Id endpoint allows you to search all products by id
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          description: The id of the product to find
          required: true
          type: string
      responses:
        '200':
          description: A single product with id matching value of parameters
          schema:
            $ref: '#/definitions/Product'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Product was not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /login:
    post:
      tags:
        - User
      summary: Login
      description: 'Logs user into the system'
      parameters:
        - in: body
          name: login
          description: The login for user
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: Successful login
          schema:
            $ref: '#/definitions/AccessToken'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid username or password
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/cart:
    get:
      summary: View shopping cart
      description: |
        This endpoint allows user to view the current state of their shopping cart
      tags:
        - Cart
      parameters:
        - name: accessToken
          in: query
          description: Access token for logged in user
          required: true
          type: string
      responses:
        '200':
          description: View cart is successful
          schema:
            $ref: '#/definitions/ShoppingCart'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authorization
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add to cart
      description: |
        This endpoint allows user to add products to shopping cart
      parameters:
        - name: productId
          in: query
          description: The id of the product to add
          required: true
          type: string
        - name: accessToken
          in: query
          description: Access token for logged in user
          required: true
          type: string
      tags:
        - Cart
      responses:
        '200':
          description: Add to cart is successful
          schema:
            $ref: '#/definitions/ShoppingCart'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authorization
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Product not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/cart/{productId}:
    delete:
      summary: Delete from cart
      description: |
        This endpoint allows user to delete product from shopping cart
      parameters:
        - name: productId
          in: path
          description: The id of the product to delete
          required: true
          type: string
        - name: accessToken
          in: query
          description: Access token for logged in user
          required: true
          type: string
      tags:
        - Cart
      responses:
        '200':
          description: Delete is successful
          schema:
            $ref: '#/definitions/ShoppingCart'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authorization
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Product not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Change quantity
      description: |
        This endpoint allows user to change quantity of product in shopping cart
      parameters:
        - name: productId
          in: path
          description: The id of the product to edit
          required: true
          type: string
        - in: body
          name: quantity
          schema:
            $ref: '#/definitions/Quantity'
        - name: accessToken
          in: query
          description: Access token for logged in user
          required: true
          type: string
      tags:
        - Cart
      responses:
        '200':
          description: Update is successful
          schema:
            $ref: '#/definitions/ShoppingCart'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Invalid authorization
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Product not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /brands:
    get:
      summary: All brands
      description: >
        The Brands endpoint returns list of all brands available for browsing
      tags:
        - Brands
      responses:
        '200':
          description: An array of brands
          schema:
            type: array
            items:
              $ref: '#/definitions/Brand'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: No brands founds
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /brands/{brandId}/products:
    get:
      summary: Products in Brand
      description: >
        All of the products of a given brand
      parameters:
        - name: brandId
          in: path
          description: The id of the brand to search for products in.
          required: true
          type: string
      tags:
        - Brands
      responses:
        '200':
          description: An array of products of the specified brand
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '400':
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Brand not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Product:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a product.
      categoryId:
        type: string
        description: The id of the category this product belongs to.
      description:
        type: string
        description: Description of product.
      price:
        type: integer
        format: int32
        description: The price of product
      imageURL:
        type: string
        description: The URL for the image representing the product
  ShoppingCart:
    type: array
    items:
      type: object
      description: products in cart
      properties:
        product: 
          $ref: '#/definitions/Product'
        quantity:
          type: integer
          format: int32
          description: quantity of product in cart
  Brand:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier given to the brand
      name:
        type: string
        description: The name of the brand
  Login:
    type: object
    properties:
      username:
        type: string
        description: Username of user logging in
      password:
        type: string
        description: Password of user logging in
  AccessToken:
    type: object
    properties:
      username: 
        type: string
        description: Username of logged in user
      lastUpdated:
        type: string
        description: Timestamp of time token was updated
      accessToken:
        type: string
        description: Unique token to validate user access
      cart: 
        $ref: '#/definitions/ShoppingCart'
  Quantity:
    type: object
    properties:
      quantity:
        type: integer
        format: int32
        description: The quantity to update product with
  Error:
    type: object
    properties:
      code: 
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string